// Generated by CoffeeScript 1.6.2
(function() {
  this.AppController = function($scope, angularFire, FIREBASE_URL) {
    var checkCols, checkDiag, checkRows, declareWinner, freshMatrix, myTurn, otherColor, winner;

    $scope.game = {};
    $scope.game.winner = "";
    freshMatrix = [
      [
        {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }
      ], [
        {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }
      ], [
        {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }
      ], [
        {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }, {
          color: 'white'
        }
      ]
    ];
    $scope.game.matrix = angular.copy(freshMatrix);
    $scope.newGameCode = "";
    $scope.gameCode = "";
    $scope.newGame = function() {
      var ref;

      if ($scope.newGameCode === "") {
        $scope.gameCode = Math.random().toString(36).substring(7);
      } else {
        $scope.gameCode = $scope.newGameCode;
        $scope.newGameCode = "";
      }
      ref = new Firebase(FIREBASE_URL + $scope.gameCode);
      angularFire(ref, $scope, "game");
      $scope.game.turn = "red";
      return $scope.myColor = "white";
    };
    $scope.makeMove = function(color, row, column) {
      if (!$scope.hasWinner() && myTurn(color) && ($scope.game.matrix[row][column]['color'] === 'white')) {
        $scope.game.matrix[row][column]['color'] = color;
        $scope.game.turn = otherColor(color);
        return declareWinner(color, row, column);
      } else {
        return alert("Can't do that");
      }
    };
    $scope.clearMatrix = function() {
      $scope.game.matrix = angular.copy(freshMatrix);
      return $scope.game.winner = "";
    };
    $scope.hasWinner = function() {
      return $scope.game.winner !== "";
    };
    $scope.inProgress = function() {
      return $scope.gameCode !== "";
    };
    otherColor = function(color) {
      var newColor;

      if (color === "red") {
        newColor = "blue";
      } else {
        newColor = "red";
      }
      return newColor;
    };
    myTurn = function(color) {
      return color === $scope.game.turn;
    };
    declareWinner = function(color, row, column) {
      if (winner(color, row, column)) {
        return $scope.game.winner = color;
      }
    };
    winner = function(color, row, col) {
      if (checkRows(color, row)) {
        return true;
      }
      if (checkCols(color, col)) {
        return true;
      }
      if (checkDiag(color)) {
        return true;
      }
    };
    checkRows = function(color, row) {
      var c;

      c = 0;
      while (c < 4) {
        if (color !== $scope.game.matrix[row][c]['color']) {
          return false;
        }
        c++;
      }
      return true;
    };
    checkCols = function(color, col) {
      var r;

      r = 0;
      while (r < 4) {
        if (color !== $scope.game.matrix[r][col]['color']) {
          return false;
        }
        r++;
      }
      return true;
    };
    return checkDiag = function(color) {
      var c, d, r, w;

      w = true;
      d = 0;
      while (d < 4) {
        if (color !== $scope.game.matrix[d][d]['color']) {
          w = false;
        }
        d++;
      }
      if (w) {
        return true;
      }
      w = true;
      c = 3;
      r = 0;
      while (r < 4) {
        if (color !== $scope.game.matrix[r][c]['color']) {
          w = false;
        }
        r++;
        c--;
      }
      return w;
    };
  };

}).call(this);
